<testsuites errors="0" failures="19" tests="48" time="" name="Kubescape Scanning"><testsuite tests="19" name="WorkloadScan" errors="0" failures="11" hostname="" id="0" skipped="" time="" timestamp="0001-01-01 00:00:00 +0000 UTC"><properties><property name="complianceScore" value="33.90"></property></properties><testcase classname="WorkloadScan" name="Immutable container filesystem" time=""><failure message="Remediation: Set the filesystem of the container to read-only when possible (pod securityContext, readOnlyRootFilesystem: true). If containers application needs to write into the filesystem, it is recommended to mount secondary filesystems for specific directories where application require write access.&#xA;More details: https://hub.armosec.io/docs/c-0017&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="WorkloadScan" name="Workload with PVC access" time=""></testcase><testcase classname="WorkloadScan" name="Non-root containers" time=""><failure message="Remediation: If your application does not need root privileges, make sure to define runAsNonRoot as true or explicitly set the runAsUser using ID 1000 or higher under the PodSecurityContext or container securityContext. In addition, set an explicit value for runAsGroup using ID 1000 or higher.&#xA;More details: https://hub.armosec.io/docs/c-0013&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="WorkloadScan" name="Writable hostPath mount" time=""></testcase><testcase classname="WorkloadScan" name="Ensure memory limits are set" time=""><failure message="Remediation: Set the memory limits or use exception mechanism to avoid unnecessary notifications.&#xA;More details: https://hub.armosec.io/docs/c-0271&#xA;&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="WorkloadScan" name="Linux hardening" time=""><failure message="Remediation: You can use AppArmor, Seccomp, SELinux and Linux Capabilities mechanisms to restrict containers abilities to utilize unwanted privileges.&#xA;More details: https://hub.armosec.io/docs/c-0055&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="WorkloadScan" name="HostPath mount" time=""></testcase><testcase classname="WorkloadScan" name="Images from allowed registry" time=""><skipped message=""></skipped></testcase><testcase classname="WorkloadScan" name="Applications credentials in configuration files" time=""></testcase><testcase classname="WorkloadScan" name="Allow privilege escalation" time=""><failure message="Remediation: If your application does not need it, make sure the allowPrivilegeEscalation field of the securityContext is set to false.&#xA;More details: https://hub.armosec.io/docs/c-0016&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="WorkloadScan" name="Privileged container" time=""><failure message="Remediation: Remove privileged capabilities by setting the securityContext.privileged to false. If you must deploy a Pod as privileged, add other restriction to it, such as network policy, Seccomp etc and still remove all unnecessary capabilities. Use the exception mechanism to remove unnecessary notifications.&#xA;More details: https://hub.armosec.io/docs/c-0057&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="WorkloadScan" name="Container hostPort" time=""></testcase><testcase classname="WorkloadScan" name="Host PID/IPC privileges" time=""></testcase><testcase classname="WorkloadScan" name="Insecure capabilities" time=""><failure message="Remediation: Remove all insecure capabilities which are not necessary for the container.&#xA;More details: https://hub.armosec.io/docs/c-0046&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="WorkloadScan" name="Ensure CPU limits are set" time=""><failure message="Remediation: Set the CPU limits or use exception mechanism to avoid unnecessary notifications.&#xA;More details: https://hub.armosec.io/docs/c-0270&#xA;&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="WorkloadScan" name="Prefer using secrets as files over secrets as environment variables" time=""></testcase><testcase classname="WorkloadScan" name="Automatic mapping of service account" time=""><failure message="Remediation: Disable automatic mounting of service account tokens to pods either at the service account level or at the individual pod level, by specifying the automountServiceAccountToken: false. Note that pod level takes precedence.&#xA;More details: https://hub.armosec.io/docs/c-0034&#xA;&#xA;apiVersion: v1; kind: ServiceAccount; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="WorkloadScan" name="HostNetwork access" time=""><failure message="Remediation: Only connect pods to host network when it is necessary. If not, set the hostNetwork field of the pod spec to false, or completely remove it (false is the default). Whitelist only those pods that must have access to host network by design.&#xA;More details: https://hub.armosec.io/docs/c-0041&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="WorkloadScan" name="Missing network policy" time=""><failure message="Remediation: Review the workloads identified by this control and assess whether it&#39;s necessary to configure a network policy for them.&#xA;More details: https://hub.armosec.io/docs/c-0260&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase></testsuite><testsuite tests="45" name="AllControls" errors="0" failures="18" hostname="" id="1" skipped="" time="" timestamp="0001-01-01 00:00:00 +0000 UTC"><properties><property name="complianceScore" value="33.33"></property></properties><testcase classname="AllControls" name="Roles with delete capabilities" time=""></testcase><testcase classname="AllControls" name="Label usage for resources" time=""><failure message="Remediation: Define labels that are most suitable to your needs of use the exceptions to prevent further notifications.&#xA;More details: https://hub.armosec.io/docs/c-0076&#xA;&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Anonymous access enabled" time=""></testcase><testcase classname="AllControls" name="Images from allowed registry" time=""><skipped message=""></skipped></testcase><testcase classname="AllControls" name="Network mapping" time=""></testcase><testcase classname="AllControls" name="CVE-2021-25742-nginx-ingress-snippet-annotation-vulnerability" time=""></testcase><testcase classname="AllControls" name="Access container service account" time=""><failure message="Remediation: Verify that RBAC is enabled. Follow the least privilege principle and ensure that only necessary pods have SA token mounted into them.&#xA;More details: https://hub.armosec.io/docs/c-0053&#xA;&#xA;apiVersion: ; kind: ServiceAccount; namespace: kube-system; name: kube-loxilb" type="Control"></failure></testcase><testcase classname="AllControls" name="Configured readiness probe" time=""><failure message="Remediation: Ensure Readiness probes are configured wherever possible.&#xA;More details: https://hub.armosec.io/docs/c-0018&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="HostPath mount" time=""></testcase><testcase classname="AllControls" name="Container hostPort" time=""></testcase><testcase classname="AllControls" name="CVE-2022-47633-kyverno-signature-bypass" time=""></testcase><testcase classname="AllControls" name="Non-root containers" time=""><failure message="Remediation: If your application does not need root privileges, make sure to define runAsNonRoot as true or explicitly set the runAsUser using ID 1000 or higher under the PodSecurityContext or container securityContext. In addition, set an explicit value for runAsGroup using ID 1000 or higher.&#xA;More details: https://hub.armosec.io/docs/c-0013&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Access Kubernetes dashboard" time=""></testcase><testcase classname="AllControls" name="Cluster internal networking" time=""></testcase><testcase classname="AllControls" name="Mount service principal" time=""></testcase><testcase classname="AllControls" name="Writable hostPath mount" time=""></testcase><testcase classname="AllControls" name="Insecure capabilities" time=""><failure message="Remediation: Remove all insecure capabilities which are not necessary for the container.&#xA;More details: https://hub.armosec.io/docs/c-0046&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Ensure CPU limits are set" time=""><failure message="Remediation: Set the CPU limits or use exception mechanism to avoid unnecessary notifications.&#xA;More details: https://hub.armosec.io/docs/c-0270&#xA;&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Portforwarding privileges" time=""></testcase><testcase classname="AllControls" name="Container runtime socket mounted" time=""></testcase><testcase classname="AllControls" name="Privileged container" time=""><failure message="Remediation: Remove privileged capabilities by setting the securityContext.privileged to false. If you must deploy a Pod as privileged, add other restriction to it, such as network policy, Seccomp etc and still remove all unnecessary capabilities. Use the exception mechanism to remove unnecessary notifications.&#xA;More details: https://hub.armosec.io/docs/c-0057&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="List Kubernetes secrets" time=""></testcase><testcase classname="AllControls" name="CVE-2022-39328-grafana-auth-bypass" time=""></testcase><testcase classname="AllControls" name="Administrative Roles" time=""></testcase><testcase classname="AllControls" name="Linux hardening" time=""><failure message="Remediation: You can use AppArmor, Seccomp, SELinux and Linux Capabilities mechanisms to restrict containers abilities to utilize unwanted privileges.&#xA;More details: https://hub.armosec.io/docs/c-0055&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="No impersonation" time=""></testcase><testcase classname="AllControls" name="Ensure memory limits are set" time=""><failure message="Remediation: Set the memory limits or use exception mechanism to avoid unnecessary notifications.&#xA;More details: https://hub.armosec.io/docs/c-0271&#xA;&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Configured liveness probe" time=""><failure message="Remediation: Ensure Liveness probes are configured wherever possible.&#xA;More details: https://hub.armosec.io/docs/c-0056&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Ingress and Egress blocked" time=""><failure message="Remediation: Define a network policy that restricts ingress and egress connections.&#xA;More details: https://hub.armosec.io/docs/c-0030&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Sudo in container entrypoint" time=""></testcase><testcase classname="AllControls" name="CVE-2022-24348-argocddirtraversal" time=""></testcase><testcase classname="AllControls" name="Applications credentials in configuration files" time=""></testcase><testcase classname="AllControls" name="Automatic mapping of service account" time=""><failure message="Remediation: Disable automatic mounting of service account tokens to pods either at the service account level or at the individual pod level, by specifying the automountServiceAccountToken: false. Note that pod level takes precedence.&#xA;More details: https://hub.armosec.io/docs/c-0034&#xA;&#xA;apiVersion: v1; kind: ServiceAccount; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Pods in default namespace" time=""><failure message="Remediation: Create necessary namespaces and move all the pods from default namespace there.&#xA;More details: https://hub.armosec.io/docs/c-0061&#xA;&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Prevent containers from allowing command execution" time=""></testcase><testcase classname="AllControls" name="HostNetwork access" time=""><failure message="Remediation: Only connect pods to host network when it is necessary. If not, set the hostNetwork field of the pod spec to false, or completely remove it (false is the default). Whitelist only those pods that must have access to host network by design.&#xA;More details: https://hub.armosec.io/docs/c-0041&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Naked pods" time=""><failure message="Remediation: Create necessary Deployment object for every pod making any pod a first class citizen in your IaC architecture.&#xA;More details: https://hub.armosec.io/docs/c-0073&#xA;&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Allow privilege escalation" time=""><failure message="Remediation: If your application does not need it, make sure the allowPrivilegeEscalation field of the securityContext is set to false.&#xA;More details: https://hub.armosec.io/docs/c-0016&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="Delete Kubernetes events" time=""></testcase><testcase classname="AllControls" name="K8s common labels usage" time=""><failure message="Remediation: Define applicable labels or use the exception mechanism to prevent further notifications.&#xA;More details: https://hub.armosec.io/docs/c-0077&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase><testcase classname="AllControls" name="SSH server running inside container" time=""></testcase><testcase classname="AllControls" name="Host PID/IPC privileges" time=""></testcase><testcase classname="AllControls" name="PSP enabled" time=""></testcase><testcase classname="AllControls" name="Image pull policy on latest tag" time=""></testcase><testcase classname="AllControls" name="Immutable container filesystem" time=""><failure message="Remediation: Set the filesystem of the container to read-only when possible (pod securityContext, readOnlyRootFilesystem: true). If containers application needs to write into the filesystem, it is recommended to mount secondary filesystems for specific directories where application require write access.&#xA;More details: https://hub.armosec.io/docs/c-0017&#xA;&#xA;apiVersion: apps/v1; kind: Deployment; namespace: kube-system; name: kube-loxilb; sourcePath: LoadBalancer\loadbalancer.yaml&#xA;apiVersion: v1; kind: Pod; name: security-context-demo; sourcePath: Manifests\LoadBalancer\pod.yaml" type="Control"></failure></testcase></testsuite></testsuites>